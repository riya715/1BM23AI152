#include <stdio.h>
#define INF 99999  

void floydWarshall(int graph[][4], int V) {
    int dist[V][V], i, j, k;

    for (i = 0; i < V; i++) {
        for (j = 0; j < V; j++) {
            if (graph[i][j] == 0 && i != j)
                dist[i][j] = INF; 
            else
                dist[i][j] = graph[i][j];  
        }
    }

 
    for (k = 0; k < V; k++) {
        for (i = 0; i < V; i++) {
            for (j = 0; j < V; j++) {
                if (dist[i][j] > dist[i][k] + dist[k][j]) {
                    dist[i][j] = dist[i][k] + dist[k][j]; 
                }
            }
        }
    }


    printf("The shortest distance matrix is:\n");
    for (i = 0; i < V; i++) {
        for (j = 0; j < V; j++) {
            if (dist[i][j] == INF)
                printf("INF\t");
            else
                printf("%d\t", dist[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int graph[4][4] = {
        {0, 3, 0, 7},
        {8, 0, 2, 0},
        {5, 0, 0, 1},
        {0, 0, 0, 0}
    };
    int V = 4;  
    floydWarshall(graph, V);
    return 0;
}
