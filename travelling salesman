

#include <stdio.h>
#include <limits.h>
#include <stdbool.h>

#define N 4

int tsp(int graph[N][N], bool visited[N], int pos, int count, int cost, int start, int path[N + 1], int bestPath[N + 1]) {
    int i, temp, ans;
    if (count == N && graph[pos][start]) {
        path[count] = start;
        for (i = 0; i <= N; i++) bestPath[i] = path[i];
        return cost + graph[pos][start];
    }

    ans = INT_MAX;
    for (i = 0; i < N; i++) {
        if (!visited[i] && graph[pos][i]) {
            visited[i] = true;
            path[count] = i;
            temp = tsp(graph, visited, i, count + 1, cost + graph[pos][i], start, path, bestPath);
            if (temp < ans) {
                ans = temp;
            }
            visited[i] = false;
        }
    }

    return ans;
}

int main() {
    int graph[N][N] = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0}
    };
    bool visited[N];
    int i, result;
    int path[N + 1], bestPath[N + 1];

    for (i = 0; i < N; i++) visited[i] = false;

    visited[0] = true;
    path[0] = 0;

    result = tsp(graph, visited, 0, 1, 0, 0, path, bestPath);

    printf("Minimum cost: %d\n", result);
    printf("Path: ");
    for (i = 0; i <= N; i++) {
        printf("%d ", bestPath[i]);
    }
    printf("\n");

    return 0;
}
