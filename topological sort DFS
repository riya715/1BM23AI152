#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int visited[MAX];
int stack[MAX];
int top = -1;
int index = 0;

void dfs(int graph[MAX][MAX], int vertices, int start) {
    visited[start] = 1;
    int i=0;
    for ( i = 0; i < vertices; i++) {
        if (graph[start][i] == 1 && visited[i] == 0) {
            dfs(graph, vertices, i);
        }
    }
    stack[++top] = start;
}

void topological_sort(int graph[MAX][MAX], int vertices) {
	int i=0;
    for ( i = 0; i < vertices; i++) {
        if (visited[i] == 0) {
            dfs(graph, vertices, i);
        }
    }
    while (top != -1) {
        printf("-->%d", stack[top--]);
    }
}

int main() {
    int graph[MAX][MAX];
    int vertices, edges, u, v;
    printf("Enter number of vertices: ");
    scanf("%d", &vertices);
    printf("Enter number of edges: ");
    scanf("%d", &edges);
    int i=0;
    int j=0;
    for ( i = 0; i < MAX; i++) {
        for ( j = 0; j < MAX; j++) {
            graph[i][j] = 0;
        }
    }
   
   
    for ( i = 0; i < edges; i++) {
        printf("Enter edge (%d,%d): ", i, i);
        scanf("%d%d", &u, &v);
        graph[u][v] = 1;
    }
    topological_sort(graph, vertices);
    return 0;
}
